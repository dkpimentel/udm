#
# Comando Git
#

#
#Inicializar o Git no repositório e comandos básicos
#

#Adicionar
git init

#Adicionar ao container local
git add .
git add <MEU ARQUIVO>
git add <MEU DIRETÓRIO>

#Fazer o commit ao adiconar o -m "descrição" no final serve para descrever o commit
git commit
git commit <MEU ARQUIVO>
git commit <MEU DIRETÓRIO>


#
#Configurações Globais
#

# Adicionando
git config --global user.name "David Kenny"
git config --global user.email <E-MAIL DO GIT>
git config --global credential.https://github.com.username <NOME DO USUÁRIO GIT>

# Consultando
git config --list
git config --global --edit

#
#Adicionando cache de senha do git
#
git config credential.helper store
git push https://github.com/repo.git
Username for 'https://github.com': <USERNAME>
Password for 'https://USERNAME@github.com': <PASSWORD>

#
#Respositório
#

# Adicionando
git remote add origin <NOME REPOSITÓRIO>

# Pesquisando
git remote -v

# Removendo rep
git remote rm origin

#
# Comando Push e Pull para envio de arquivos
#

#Enviar arquivos/diretórios para o repositório remoto
git push --tags origin <BRANCH>
git push --tags --force origin <BRANCH>

#Atualizar repositório local de acordo com o remoto
git pull --tags origin <BRANCH>
#Busca alterações no ropositório remoto mais não aplica no branch atual
git fetch


#Remover Tag do repositório
git push --delete origin <TAG>

#
# Branch
#

#Criando 
git branch <NOVO BRANCH>

#Exclurir 
git branch -d <BRANCH>
git branch -D <BRANCH> para forçar

#Renomear 
git branch -m <ATUAL> <NOVO>

#Alterar entre os Branch
git checkout <BRANCH>

#Merge dos Branchs - Precisa está no branch estável
git merge <BRANCH>

#Verificar as mudanças nos Branch
git show <BRANCH ID>

#
# Tags
#

# Criando
git tag -a <TAG> <BRANCH ID> 

#Ecluir
git tag -d <TAG>

#Alterar entre as Tags
git checkout <TAG>

#Verificar as mudanças nas Tags
git show <TAG>

#
#Log
#

#Log
git log

#Informações do lg resumido em uma linha
git log --pretty=oneline

#
#Correção de erros no git
#

#Acertando erro “fatal: refusing to merge unrelated histories” - Permitindo histórias não relacionadas
git pull origin master --allow-unrelated-histories
